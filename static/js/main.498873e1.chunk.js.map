{"version":3,"sources":["components/TimeConverter.js","components/DailyCard.js","components/DayConverter.js","components/WeeklyForecast.js","components/UnixToDate.js","components/DailyOverviewContent.js","components/Header.js","components/App.js","index.js"],"names":["TimeConverter","sec","timestr","Date","toLocaleTimeString","slice","lastIndexOf","DailyCard","_ref","_ref$weather","weather","name","_ref$weather$weather$","dt","Object","slicedToArray","id","_ref$weather$sys","description","sys","sunrise","sunset","_ref$weather$main","main","temp","humidity","speed","wind","forecast","react_default","a","createElement","className","lib_default","iconId","toString","flip","rotate","toFixed","DayConverter","toLocaleDateString","weekday","WeeklyCard","_ref$data","data","_ref$data$weather$","WeeklyForecast","props","filteredList","list","filter","element","dt_txt","includes","map","WeeklyForecast_WeeklyCard","UnixToDate","toISOString","substring","DailyOverViewCard","DailyOverviewContent","today","concat","DailyOverviewContent_DailyOverViewCard","Header","state","searchValue","SearchCity","search","formattedSearch","charAt","toUpperCase","city","cities","length","alert","lat","coord","long","lon","_this","searchWeather","_this2","this","class","onSubmit","e","preventDefault","type","placeholder","value","onChange","setState","target","href","onClick","getWeather","React","Component","App","getPosition","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","console","log","message","_callee","units","weatherResponse","forecastResponse","dailyWeather","forecastData","_args","arguments","regenerator_default","wrap","_context","prev","next","undefined","fetch","sent","json","stop","components_Header","components_DailyCard","components_DailyOverviewContent","components_WeeklyForecast","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.498873e1.chunk.js","sourcesContent":["const TimeConverter = (sec) => {\r\n    let date = new Date(sec * 1000);\r\n    let timestr = date.toLocaleTimeString('en-GB');\r\n    let formatedtime = timestr.slice(0, timestr.lastIndexOf(\":\"));\r\n    return formatedtime;\r\n  }\r\nexport default TimeConverter;\r\n\r\n","import React from \"react\";\r\nimport WeatherIcon from \"react-icons-weather\";\r\nimport TimeConverter from \"./TimeConverter\";\r\n\r\nconst DailyCard = ({\r\n  weather: {\r\n    name,\r\n    dt,\r\n    weather: [{ id, description }],\r\n    sys: { sunrise, sunset },\r\n    main: { temp, humidity },\r\n    wind: { speed }\r\n  },\r\n  forecast\r\n}) => {\r\n  return (\r\n    <div className=\"col s12 m6 l6\">\r\n      <div className=\"card\" id=\"dailycard\">\r\n        <div className=\"card-content center-align\">\r\n          <span className=\"card-title\">{name}</span>\r\n          <WeatherIcon\r\n            name=\"owm\"\r\n            iconId={id.toString()}\r\n            flip=\"horizontal\"\r\n            rotate=\"90\"\r\n            id=\"dailyCardIcon\"\r\n          />\r\n          <p> Temperature: {temp.toFixed(1)} &#176; </p>\r\n          <p> Humidity: {humidity} %</p>\r\n          <p> Wind: {speed} </p>\r\n          <p> Sunrise: {TimeConverter([sunrise])}</p>\r\n          <p> Sunset: {TimeConverter([sunset])}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyCard;\r\n","const DayConverter = (sec) => {\r\n  let options = {weekday: 'long'}\r\n  let date = new Date(sec * 1000);\r\n  let timestr = date.toLocaleDateString('en-GB',options);\r\n  return timestr;\r\n}\r\n\r\nexport default DayConverter;","import React from \"react\";\r\nimport WeatherIcon from \"react-icons-weather\";\r\nimport DayConverter from \"./DayConverter\";\r\n\r\nconst WeeklyForecast = props => {\r\n  const filteredList = props.forecast.list\r\n    .filter(element => element.dt_txt.includes(\"12:00\"))\r\n    .map(element => <WeeklyCard data={element} />);\r\n  return (\r\n    <div id=\"weeklyrow\" className=\"row\">\r\n      {filteredList}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WeeklyCard = ({\r\n  data: {\r\n    dt,\r\n    main: { temp },\r\n    weather: [{ id, description }]\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"col s12 m6 l2\">\r\n      <div className=\"card-panel center-align\">\r\n        <p>{DayConverter(dt)}</p>\r\n        <WeatherIcon\r\n          className=\"icon\"\r\n          name=\"owm\"\r\n          iconId={id.toString()}\r\n          flip=\"horizontal\"\r\n          rotate=\"90\"\r\n        />\r\n        <p>{temp.toFixed(1)} &#176;</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyForecast;\r\n","const UnixToDate = (sec) => {\r\nlet date = new Date( 1000 * sec);\r\nlet formatedDate = date.toISOString().substring(0, 10);\r\nreturn formatedDate;\r\n\r\n}\r\n\r\nexport default UnixToDate;","import React from \"react\";\r\nimport WeatherIcon from \"react-icons-weather\";\r\nimport UnixToDate from \"./UnixToDate\";\r\nimport TimeConverter from \"./TimeConverter\";\r\n\r\nconst DailyOverviewContent = props => {\r\n  const today = UnixToDate(props.weather.dt);\r\n  const filteredList = props.forecast.list\r\n    .filter(element => element.dt_txt.includes(`${today}`))\r\n    .map(element => <DailyOverViewCard data={element} />);\r\n  return (\r\n    <div className=\"col s12 m6 l6\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content center-align\">\r\n          <span className=\"card-title\">Daily Overview</span>\r\n          {filteredList}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DailyOverViewCard = ({\r\n  data: {\r\n    dt,\r\n    main: { temp },\r\n    weather: [{ id }]\r\n  }\r\n}) => {\r\n  return (\r\n    <div>\r\n      <p>{TimeConverter(dt)}</p>\r\n      <div>\r\n        <WeatherIcon\r\n          className=\"icon\"\r\n          name=\"owm\"\r\n          iconId={id.toString()}\r\n          flip=\"horizontal\"\r\n          rotate=\"90\"\r\n        />\r\n      </div>\r\n      <p>{temp.toFixed(1)} &#176;</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyOverviewContent;\r\n","import React from \"react\";\nimport cities from \"./cityList.json\";\n\nclass Header extends React.Component {\n  state = {\n    searchValue: ''\n  };\n\n  SearchCity = search => {\n    const formattedSearch = search.charAt(0).toUpperCase() + search.slice(1);\n    const city = cities.filter(city => city.name.includes(formattedSearch));\n\n    if (city.length < 0 ) {\n      alert(\"That is not a city, try again\");\n    }\n    if (city.length == 0)\n    alert(\"That is not a city, try again in english\");\n    else {\n      let lat = city[0].coord.lat;\n      let long = city[0].coord.lon;\n      this.props.searchWeather(lat, long);\n    }\n  };\n\n  render() {\n    return (\n      <header>\n        <navbar>\n          <div class=\"row\">\n            <div>\n              <form\n                class=\"col s12 m4 l8\"\n                onSubmit={e => {\n                  e.preventDefault();\n                  this.SearchCity(this.state.searchValue);\n                }}>\n                <div class=\"row\">\n                  <div class=\"input-field col s8 m6 l8\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"search\"\n                      value={this.state.searchValue}\n                      onChange={e =>\n                        this.setState({ searchValue: e.target.value })\n                      }\n                    />\n                  </div>\n                  <button id=\"submit\" className=\"waves-effect waves-light btn amber accent-3\">\n                    submit\n                  </button>\n                </div>\n              </form>\n            </div>\n              <div className=\"hide-on-small-only\">\n              <a\n              href=\"#\"\n              className=\"waves-effect waves-light btn right\"\n              onClick={e => {\n                e.preventDefault();\n                this.props.getWeather(\"metric\");\n              }}>\n              Metric\n            </a>\n            <a\n              href=\"#\"\n              className=\"waves-effect waves-light btn right\"\n              onClick={e => {\n                e.preventDefault();\n                this.props.getWeather(\"imperial\");\n              }}>\n              Imperial\n            </a></div>        \n          \n          </div>\n        </navbar>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport DailyCard from \"./DailyCard\";\nimport WeeklyForecast from \"./WeeklyForecast\";\nimport DailyOverviewContent from \"./DailyOverviewContent\";\nimport Header from \"./Header\";\n\nclass App extends React.Component {\n  state = {\n    lat: null,\n    long: null,\n    weather: null,\n    forecast: null\n  };\n\n  componentDidMount() {\n    this.getPosition();\n  }\n\n  getPosition = () => {\n    navigator.geolocation.getCurrentPosition(position =>\n      this.setState(\n        {\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        },\n        () => this.getWeather()\n      ), err => console.log( err.message )\n    );\n  };\n\n\n  searchWeather = (lat, lon) => {\n    this.setState(\n      {\n        lat: `${lat}`,\n        long: `${lon}`\n      },\n      () => this.getWeather()\n    );\n  }\n\n  getWeather = async (units = \"metric\") => {\n    const weatherResponse = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${\n        this.state.lat\n      }&lon=${\n        this.state.long\n      }&appid=3b7e14abfb7372f6c8870898d5c70aa5&units=${units}`\n    );\n    const forecastResponse = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${\n        this.state.lat\n      }&lon=${\n        this.state.long\n      }&appid=3b7e14abfb7372f6c8870898d5c70aa5&units=${units}`\n    );\n    const dailyWeather = await weatherResponse.json();\n    const forecastData = await forecastResponse.json();\n\n    this.setState({ weather: dailyWeather, forecast: forecastData });\n  };\n\n  render() {\n    if (this.state.weather !== null) {\n      return (\n        <div className=\"container\">\n          <Header\n            forecast={this.state.forecast}\n            weather={this.state.weather}\n            getWeather={this.getWeather}\n            searchWeather={this.searchWeather}\n          />\n          <div className=\"row\" id=\"daily-card-row\">\n            <DailyCard weather={this.state.weather} />\n            <DailyOverviewContent\n              forecast={this.state.forecast}\n              weather={this.state.weather}\n            />\n          </div>\n          <WeeklyForecast forecast={this.state.forecast} />\n        </div>\n      );\n    } else {\n      return (\n        <div class=\"preloader-wrapper big active\">\n          <div class=\"spinner-layer spinner-blue-only\">\n            <div class=\"circle-clipper left\">\n              <div class=\"circle\" />\n            </div>\n            <div class=\"gap-patch\">\n              <div class=\"circle\" />\n            </div>\n            <div class=\"circle-clipper right\">\n              <div class=\"circle\" />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}